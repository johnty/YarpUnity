/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class NetworkBase : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal NetworkBase(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(NetworkBase obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~NetworkBase() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          yarpPINVOKE.delete_NetworkBase(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public static void initMinimum() {
    yarpPINVOKE.NetworkBase_initMinimum();
  }

  public static void finiMinimum() {
    yarpPINVOKE.NetworkBase_finiMinimum();
  }

  public static bool connect(string src, string dest, string carrier, bool quiet) {
    bool ret = yarpPINVOKE.NetworkBase_connect__SWIG_0(src, dest, carrier, quiet);
    return ret;
  }

  public static bool connect(string src, string dest, string carrier) {
    bool ret = yarpPINVOKE.NetworkBase_connect__SWIG_1(src, dest, carrier);
    return ret;
  }

  public static bool connect(string src, string dest) {
    bool ret = yarpPINVOKE.NetworkBase_connect__SWIG_2(src, dest);
    return ret;
  }

  public static bool connect(string src, string dest, ContactStyle style) {
    bool ret = yarpPINVOKE.NetworkBase_connect__SWIG_3(src, dest, ContactStyle.getCPtr(style));
    if (yarpPINVOKE.SWIGPendingException.Pending) throw yarpPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool disconnect(string src, string dest, bool quiet) {
    bool ret = yarpPINVOKE.NetworkBase_disconnect__SWIG_0(src, dest, quiet);
    return ret;
  }

  public static bool disconnect(string src, string dest) {
    bool ret = yarpPINVOKE.NetworkBase_disconnect__SWIG_1(src, dest);
    return ret;
  }

  public static bool disconnect(string src, string dest, ContactStyle style) {
    bool ret = yarpPINVOKE.NetworkBase_disconnect__SWIG_2(src, dest, ContactStyle.getCPtr(style));
    if (yarpPINVOKE.SWIGPendingException.Pending) throw yarpPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool isConnected(string src, string dest, bool quiet) {
    bool ret = yarpPINVOKE.NetworkBase_isConnected__SWIG_0(src, dest, quiet);
    return ret;
  }

  public static bool isConnected(string src, string dest) {
    bool ret = yarpPINVOKE.NetworkBase_isConnected__SWIG_1(src, dest);
    return ret;
  }

  public static bool isConnected(string src, string dest, ContactStyle style) {
    bool ret = yarpPINVOKE.NetworkBase_isConnected__SWIG_2(src, dest, ContactStyle.getCPtr(style));
    if (yarpPINVOKE.SWIGPendingException.Pending) throw yarpPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool exists(string port, bool quiet) {
    bool ret = yarpPINVOKE.NetworkBase_exists__SWIG_0(port, quiet);
    return ret;
  }

  public static bool exists(string port) {
    bool ret = yarpPINVOKE.NetworkBase_exists__SWIG_1(port);
    return ret;
  }

  public static bool exists(string port, ContactStyle style) {
    bool ret = yarpPINVOKE.NetworkBase_exists__SWIG_2(port, ContactStyle.getCPtr(style));
    if (yarpPINVOKE.SWIGPendingException.Pending) throw yarpPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool sync(string port, bool quiet) {
    bool ret = yarpPINVOKE.NetworkBase_sync__SWIG_0(port, quiet);
    return ret;
  }

  public static bool sync(string port) {
    bool ret = yarpPINVOKE.NetworkBase_sync__SWIG_1(port);
    return ret;
  }

  public static int main(int argc, SWIGTYPE_p_p_char argv) {
    int ret = yarpPINVOKE.NetworkBase_main(argc, SWIGTYPE_p_p_char.getCPtr(argv));
    return ret;
  }

  public static int runNameServer(int argc, SWIGTYPE_p_p_char argv) {
    int ret = yarpPINVOKE.NetworkBase_runNameServer(argc, SWIGTYPE_p_p_char.getCPtr(argv));
    return ret;
  }

  public static void assertion(bool shouldBeTrue) {
    yarpPINVOKE.NetworkBase_assertion(shouldBeTrue);
  }

  public static Contact queryName(string name) {
    Contact ret = new Contact(yarpPINVOKE.NetworkBase_queryName(name), true);
    return ret;
  }

  public static Contact registerName(string name) {
    Contact ret = new Contact(yarpPINVOKE.NetworkBase_registerName(name), true);
    return ret;
  }

  public static Contact registerContact(Contact contact) {
    Contact ret = new Contact(yarpPINVOKE.NetworkBase_registerContact(Contact.getCPtr(contact)), true);
    if (yarpPINVOKE.SWIGPendingException.Pending) throw yarpPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static Contact unregisterName(string name) {
    Contact ret = new Contact(yarpPINVOKE.NetworkBase_unregisterName(name), true);
    return ret;
  }

  public static Contact unregisterContact(Contact contact) {
    Contact ret = new Contact(yarpPINVOKE.NetworkBase_unregisterContact(Contact.getCPtr(contact)), true);
    if (yarpPINVOKE.SWIGPendingException.Pending) throw yarpPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool setProperty(string name, string key, Value value) {
    bool ret = yarpPINVOKE.NetworkBase_setProperty(name, key, Value.getCPtr(value));
    if (yarpPINVOKE.SWIGPendingException.Pending) throw yarpPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static Value getProperty(string name, string key) {
    IntPtr cPtr = yarpPINVOKE.NetworkBase_getProperty(name, key);
    Value ret = (cPtr == IntPtr.Zero) ? null : new Value(cPtr, false);
    return ret;
  }

  public static ConstString getNameServerName() {
    ConstString ret = new ConstString(yarpPINVOKE.NetworkBase_getNameServerName(), true);
    return ret;
  }

  public static Contact getNameServerContact() {
    Contact ret = new Contact(yarpPINVOKE.NetworkBase_getNameServerContact(), true);
    return ret;
  }

  public static bool setNameServerName(string name) {
    bool ret = yarpPINVOKE.NetworkBase_setNameServerName(name);
    return ret;
  }

  public static bool setLocalMode(bool flag) {
    bool ret = yarpPINVOKE.NetworkBase_setLocalMode(flag);
    return ret;
  }

  public static bool getLocalMode() {
    bool ret = yarpPINVOKE.NetworkBase_getLocalMode();
    return ret;
  }

  public static ConstString readString(SWIGTYPE_p_bool eof) {
    ConstString ret = new ConstString(yarpPINVOKE.NetworkBase_readString__SWIG_0(SWIGTYPE_p_bool.getCPtr(eof)), true);
    return ret;
  }

  public static ConstString readString() {
    ConstString ret = new ConstString(yarpPINVOKE.NetworkBase_readString__SWIG_1(), true);
    return ret;
  }

  public new static bool write(Contact contact, PortWriter cmd, PortReader reply, bool admin, bool quiet, double timeout) {
    bool ret = yarpPINVOKE.NetworkBase_write__SWIG_0(Contact.getCPtr(contact), PortWriter.getCPtr(cmd), PortReader.getCPtr(reply), admin, quiet, timeout);
    if (yarpPINVOKE.SWIGPendingException.Pending) throw yarpPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public new static bool write(Contact contact, PortWriter cmd, PortReader reply, bool admin, bool quiet) {
    bool ret = yarpPINVOKE.NetworkBase_write__SWIG_1(Contact.getCPtr(contact), PortWriter.getCPtr(cmd), PortReader.getCPtr(reply), admin, quiet);
    if (yarpPINVOKE.SWIGPendingException.Pending) throw yarpPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public new static bool write(Contact contact, PortWriter cmd, PortReader reply, bool admin) {
    bool ret = yarpPINVOKE.NetworkBase_write__SWIG_2(Contact.getCPtr(contact), PortWriter.getCPtr(cmd), PortReader.getCPtr(reply), admin);
    if (yarpPINVOKE.SWIGPendingException.Pending) throw yarpPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public new static bool write(Contact contact, PortWriter cmd, PortReader reply) {
    bool ret = yarpPINVOKE.NetworkBase_write__SWIG_3(Contact.getCPtr(contact), PortWriter.getCPtr(cmd), PortReader.getCPtr(reply));
    if (yarpPINVOKE.SWIGPendingException.Pending) throw yarpPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public new static bool write(Contact contact, PortWriter cmd, PortReader reply, ContactStyle style) {
    bool ret = yarpPINVOKE.NetworkBase_write__SWIG_4(Contact.getCPtr(contact), PortWriter.getCPtr(cmd), PortReader.getCPtr(reply), ContactStyle.getCPtr(style));
    if (yarpPINVOKE.SWIGPendingException.Pending) throw yarpPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool writeToNameServer(PortWriter cmd, PortReader reply, ContactStyle style) {
    bool ret = yarpPINVOKE.NetworkBase_writeToNameServer(PortWriter.getCPtr(cmd), PortReader.getCPtr(reply), ContactStyle.getCPtr(style));
    if (yarpPINVOKE.SWIGPendingException.Pending) throw yarpPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public new static bool write(string port_name, PortWriter cmd, PortReader reply) {
    bool ret = yarpPINVOKE.NetworkBase_write__SWIG_5(port_name, PortWriter.getCPtr(cmd), PortReader.getCPtr(reply));
    if (yarpPINVOKE.SWIGPendingException.Pending) throw yarpPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool checkNetwork() {
    bool ret = yarpPINVOKE.NetworkBase_checkNetwork__SWIG_0();
    return ret;
  }

  public static bool checkNetwork(double timeout) {
    bool ret = yarpPINVOKE.NetworkBase_checkNetwork__SWIG_1(timeout);
    return ret;
  }

  public static bool initialized() {
    bool ret = yarpPINVOKE.NetworkBase_initialized();
    return ret;
  }

  public static void setVerbosity(int verbosity) {
    yarpPINVOKE.NetworkBase_setVerbosity(verbosity);
  }

  public static void queryBypass(SWIGTYPE_p_NameStore store) {
    yarpPINVOKE.NetworkBase_queryBypass(SWIGTYPE_p_NameStore.getCPtr(store));
  }

  public static ConstString getEnvironment(string key, SWIGTYPE_p_bool found) {
    ConstString ret = new ConstString(yarpPINVOKE.NetworkBase_getEnvironment__SWIG_0(key, SWIGTYPE_p_bool.getCPtr(found)), true);
    return ret;
  }

  public static ConstString getEnvironment(string key) {
    ConstString ret = new ConstString(yarpPINVOKE.NetworkBase_getEnvironment__SWIG_1(key), true);
    return ret;
  }

  public static bool registerCarrier(string name, string dll) {
    bool ret = yarpPINVOKE.NetworkBase_registerCarrier(name, dll);
    return ret;
  }

  public static void _lock() {
    yarpPINVOKE.NetworkBase__lock();
  }

  public static void unlock() {
    yarpPINVOKE.NetworkBase_unlock();
  }

  public static bool localNetworkAllocation() {
    bool ret = yarpPINVOKE.NetworkBase_localNetworkAllocation();
    return ret;
  }

  public static Contact detectNameServer(bool useDetectedServer, SWIGTYPE_p_bool scanNeeded, SWIGTYPE_p_bool serverUsed) {
    Contact ret = new Contact(yarpPINVOKE.NetworkBase_detectNameServer(useDetectedServer, SWIGTYPE_p_bool.getCPtr(scanNeeded), SWIGTYPE_p_bool.getCPtr(serverUsed)), true);
    if (yarpPINVOKE.SWIGPendingException.Pending) throw yarpPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static ConstString getConfigFile(string fname) {
    ConstString ret = new ConstString(yarpPINVOKE.NetworkBase_getConfigFile(fname), true);
    return ret;
  }

  public static int getDefaultPortRange() {
    int ret = yarpPINVOKE.NetworkBase_getDefaultPortRange();
    return ret;
  }

  public NetworkBase() : this(yarpPINVOKE.new_NetworkBase(), true) {
  }

}
