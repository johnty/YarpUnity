/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class ResourceFinder : Searchable {
  private HandleRef swigCPtr;

  internal ResourceFinder(IntPtr cPtr, bool cMemoryOwn) : base(yarpPINVOKE.ResourceFinder_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(ResourceFinder obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~ResourceFinder() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          yarpPINVOKE.delete_ResourceFinder(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public ResourceFinder() : this(yarpPINVOKE.new_ResourceFinder(), true) {
  }

  public bool setVerbose(bool verbose) {
    bool ret = yarpPINVOKE.ResourceFinder_setVerbose__SWIG_0(swigCPtr, verbose);
    return ret;
  }

  public bool setVerbose() {
    bool ret = yarpPINVOKE.ResourceFinder_setVerbose__SWIG_1(swigCPtr);
    return ret;
  }

  public bool setQuiet(bool quiet) {
    bool ret = yarpPINVOKE.ResourceFinder_setQuiet__SWIG_0(swigCPtr, quiet);
    return ret;
  }

  public bool setQuiet() {
    bool ret = yarpPINVOKE.ResourceFinder_setQuiet__SWIG_1(swigCPtr);
    return ret;
  }

  public bool configure(string policyName, int argc, SWIGTYPE_p_p_char argv, bool skipFirstArgument) {
    bool ret = yarpPINVOKE.ResourceFinder_configure__SWIG_0(swigCPtr, policyName, argc, SWIGTYPE_p_p_char.getCPtr(argv), skipFirstArgument);
    return ret;
  }

  public bool configure(string policyName, int argc, SWIGTYPE_p_p_char argv) {
    bool ret = yarpPINVOKE.ResourceFinder_configure__SWIG_1(swigCPtr, policyName, argc, SWIGTYPE_p_p_char.getCPtr(argv));
    return ret;
  }

  public bool configure(int argc, SWIGTYPE_p_p_char argv) {
    bool ret = yarpPINVOKE.ResourceFinder_configure__SWIG_2(swigCPtr, argc, SWIGTYPE_p_p_char.getCPtr(argv));
    return ret;
  }

  public bool setDefaultContext(string contextName) {
    bool ret = yarpPINVOKE.ResourceFinder_setDefaultContext(swigCPtr, contextName);
    return ret;
  }

  public bool setContext(string contextName) {
    bool ret = yarpPINVOKE.ResourceFinder_setContext(swigCPtr, contextName);
    return ret;
  }

  public bool setDefault(string key, string val) {
    bool ret = yarpPINVOKE.ResourceFinder_setDefault(swigCPtr, key, val);
    return ret;
  }

  public bool setDefaultConfigFile(string fname) {
    bool ret = yarpPINVOKE.ResourceFinder_setDefaultConfigFile(swigCPtr, fname);
    return ret;
  }

  public ConstString findFile(string key) {
    ConstString ret = new ConstString(yarpPINVOKE.ResourceFinder_findFile(swigCPtr, key), true);
    return ret;
  }

  public ConstString findPath(string key) {
    ConstString ret = new ConstString(yarpPINVOKE.ResourceFinder_findPath__SWIG_0(swigCPtr, key), true);
    return ret;
  }

  public Bottle findPaths(string key) {
    Bottle ret = new Bottle(yarpPINVOKE.ResourceFinder_findPaths(swigCPtr, key), true);
    return ret;
  }

  public ConstString findPath() {
    ConstString ret = new ConstString(yarpPINVOKE.ResourceFinder_findPath__SWIG_1(swigCPtr), true);
    return ret;
  }

  public override ConstString getContext() {
    ConstString ret = new ConstString(yarpPINVOKE.ResourceFinder_getContext(swigCPtr), true);
    return ret;
  }

  public ConstString getContextPath() {
    ConstString ret = new ConstString(yarpPINVOKE.ResourceFinder_getContextPath(swigCPtr), true);
    return ret;
  }

  public Bottle getContexts() {
    Bottle ret = new Bottle(yarpPINVOKE.ResourceFinder_getContexts(swigCPtr), true);
    return ret;
  }

  public new bool check(string key) {
    bool ret = yarpPINVOKE.ResourceFinder_check__SWIG_0(swigCPtr, key);
    return ret;
  }

  public new Value find(string key) {
    Value ret = new Value(yarpPINVOKE.ResourceFinder_find(swigCPtr, key), false);
    return ret;
  }

  public new Bottle findGroup(string key) {
    Bottle ret = new Bottle(yarpPINVOKE.ResourceFinder_findGroup__SWIG_0(swigCPtr, key), false);
    return ret;
  }

  public virtual bool isNull() {
    bool ret = yarpPINVOKE.ResourceFinder_isNull(swigCPtr);
    return ret;
  }

  public new ConstString toString_c() {
    ConstString ret = new ConstString(yarpPINVOKE.ResourceFinder_toString_c(swigCPtr), true);
    return ret;
  }

  public virtual ResourceFinder findNestedResourceFinder(string key) {
    ResourceFinder ret = new ResourceFinder(yarpPINVOKE.ResourceFinder_findNestedResourceFinder(swigCPtr, key), true);
    return ret;
  }

  public bool isConfigured() {
    bool ret = yarpPINVOKE.ResourceFinder_isConfigured(swigCPtr);
    return ret;
  }

  public static ResourceFinder getResourceFinderSingleton() {
    ResourceFinder ret = new ResourceFinder(yarpPINVOKE.ResourceFinder_getResourceFinderSingleton(), false);
    return ret;
  }

  public new bool check(string key, string comment) {
    bool ret = yarpPINVOKE.ResourceFinder_check__SWIG_1_0(swigCPtr, key, comment);
    return ret;
  }

  public new Value check(string key, Value fallback, string comment) {
    Value ret = new Value(yarpPINVOKE.ResourceFinder_check__SWIG_1_1(swigCPtr, key, Value.getCPtr(fallback), comment), true);
    if (yarpPINVOKE.SWIGPendingException.Pending) throw yarpPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public new Value check(string key, Value fallback) {
    Value ret = new Value(yarpPINVOKE.ResourceFinder_check__SWIG_1_2(swigCPtr, key, Value.getCPtr(fallback)), true);
    if (yarpPINVOKE.SWIGPendingException.Pending) throw yarpPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public new Bottle findGroup(string key, string comment) {
    Bottle ret = new Bottle(yarpPINVOKE.ResourceFinder_findGroup__SWIG_1_0(swigCPtr, key, comment), false);
    return ret;
  }

  public bool configure(string policyName, SVector argv, bool skipFirstArgument) {
    bool ret = yarpPINVOKE.ResourceFinder_configure__SWIG_3(swigCPtr, policyName, SVector.getCPtr(argv), skipFirstArgument);
    if (yarpPINVOKE.SWIGPendingException.Pending) throw yarpPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool configure(string policyName, SVector argv) {
    bool ret = yarpPINVOKE.ResourceFinder_configure__SWIG_4(swigCPtr, policyName, SVector.getCPtr(argv));
    if (yarpPINVOKE.SWIGPendingException.Pending) throw yarpPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}
