/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class ImageRgba : Image {
  private HandleRef swigCPtr;

  internal ImageRgba(IntPtr cPtr, bool cMemoryOwn) : base(yarpPINVOKE.ImageRgba_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(ImageRgba obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~ImageRgba() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          yarpPINVOKE.delete_ImageRgba(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public override int getPixelSize() {
    int ret = yarpPINVOKE.ImageRgba_getPixelSize(swigCPtr);
    return ret;
  }

  public override int getPixelCode() {
    int ret = yarpPINVOKE.ImageRgba_getPixelCode(swigCPtr);
    return ret;
  }

  public PixelRgba pixel(int x, int y) {
    PixelRgba ret = new PixelRgba(yarpPINVOKE.ImageRgba_pixel(swigCPtr, x, y), false);
    return ret;
  }

  public PixelRgba access(int x, int y) {
    PixelRgba ret = new PixelRgba(yarpPINVOKE.ImageRgba_access(swigCPtr, x, y), false);
    return ret;
  }

  public PixelRgba safePixel(int x, int y) {
    PixelRgba ret = new PixelRgba(yarpPINVOKE.ImageRgba_safePixel__SWIG_0(swigCPtr, x, y), false);
    return ret;
  }

  public ImageRgba() : this(yarpPINVOKE.new_ImageRgba(), true) {
  }

}
