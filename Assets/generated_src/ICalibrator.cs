/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class ICalibrator : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal ICalibrator(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(ICalibrator obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~ICalibrator() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          yarpPINVOKE.delete_ICalibrator(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public virtual bool calibrate(DeviceDriver dd) {
    bool ret = yarpPINVOKE.ICalibrator_calibrate(swigCPtr, DeviceDriver.getCPtr(dd));
    return ret;
  }

  public virtual bool park(DeviceDriver dd, bool wait) {
    bool ret = yarpPINVOKE.ICalibrator_park__SWIG_0(swigCPtr, DeviceDriver.getCPtr(dd), wait);
    return ret;
  }

  public virtual bool park(DeviceDriver dd) {
    bool ret = yarpPINVOKE.ICalibrator_park__SWIG_1(swigCPtr, DeviceDriver.getCPtr(dd));
    return ret;
  }

  public virtual bool quitCalibrate() {
    bool ret = yarpPINVOKE.ICalibrator_quitCalibrate(swigCPtr);
    return ret;
  }

  public virtual bool quitPark() {
    bool ret = yarpPINVOKE.ICalibrator_quitPark(swigCPtr);
    return ret;
  }

}
