/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class Value : Portable {
  private HandleRef swigCPtr;

  internal Value(IntPtr cPtr, bool cMemoryOwn) : base(yarpPINVOKE.Value_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(Value obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~Value() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          yarpPINVOKE.delete_Value(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public new bool check(string key, string comment) {
    bool ret = yarpPINVOKE.Value_check__SWIG_0_0(swigCPtr, key, comment);
    return ret;
  }

  public new Value check(string key, Value fallback, string comment) {
    Value ret = new Value(yarpPINVOKE.Value_check__SWIG_0_1(swigCPtr, key, Value.getCPtr(fallback), comment), true);
    if (yarpPINVOKE.SWIGPendingException.Pending) throw yarpPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public new Value check(string key, Value fallback) {
    Value ret = new Value(yarpPINVOKE.Value_check__SWIG_0_2(swigCPtr, key, Value.getCPtr(fallback)), true);
    if (yarpPINVOKE.SWIGPendingException.Pending) throw yarpPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public new Bottle findGroup(string key, string comment) {
    Bottle ret = new Bottle(yarpPINVOKE.Value_findGroup__SWIG_0_0(swigCPtr, key, comment), false);
    return ret;
  }

  public Value() : this(yarpPINVOKE.new_Value__SWIG_0(), true) {
  }

  public Value(int x, bool isVocab) : this(yarpPINVOKE.new_Value__SWIG_1(x, isVocab), true) {
  }

  public Value(int x) : this(yarpPINVOKE.new_Value__SWIG_2(x), true) {
  }

  public Value(double x) : this(yarpPINVOKE.new_Value__SWIG_3(x), true) {
  }

  public Value(string str, bool isVocab) : this(yarpPINVOKE.new_Value__SWIG_4(str, isVocab), true) {
  }

  public Value(string str) : this(yarpPINVOKE.new_Value__SWIG_5(str), true) {
  }

  public Value(SWIGTYPE_p_void data, int length) : this(yarpPINVOKE.new_Value__SWIG_6(SWIGTYPE_p_void.getCPtr(data), length), true) {
  }

  public Value(Value alt) : this(yarpPINVOKE.new_Value__SWIG_7(Value.getCPtr(alt)), true) {
    if (yarpPINVOKE.SWIGPendingException.Pending) throw yarpPINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual bool isBool() {
    bool ret = yarpPINVOKE.Value_isBool(swigCPtr);
    return ret;
  }

  public virtual bool isInt() {
    bool ret = yarpPINVOKE.Value_isInt(swigCPtr);
    return ret;
  }

  public virtual bool isString() {
    bool ret = yarpPINVOKE.Value_isString(swigCPtr);
    return ret;
  }

  public virtual bool isDouble() {
    bool ret = yarpPINVOKE.Value_isDouble(swigCPtr);
    return ret;
  }

  public virtual bool isList() {
    bool ret = yarpPINVOKE.Value_isList(swigCPtr);
    return ret;
  }

  public virtual bool isDict() {
    bool ret = yarpPINVOKE.Value_isDict(swigCPtr);
    return ret;
  }

  public virtual bool isVocab() {
    bool ret = yarpPINVOKE.Value_isVocab(swigCPtr);
    return ret;
  }

  public virtual bool isBlob() {
    bool ret = yarpPINVOKE.Value_isBlob(swigCPtr);
    return ret;
  }

  public virtual bool asBool() {
    bool ret = yarpPINVOKE.Value_asBool(swigCPtr);
    return ret;
  }

  public virtual int asInt() {
    int ret = yarpPINVOKE.Value_asInt(swigCPtr);
    return ret;
  }

  public virtual int asVocab() {
    int ret = yarpPINVOKE.Value_asVocab(swigCPtr);
    return ret;
  }

  public virtual double asDouble() {
    double ret = yarpPINVOKE.Value_asDouble(swigCPtr);
    return ret;
  }

  public virtual ConstString asString() {
    ConstString ret = new ConstString(yarpPINVOKE.Value_asString(swigCPtr), true);
    return ret;
  }

  public virtual Bottle asList() {
    IntPtr cPtr = yarpPINVOKE.Value_asList(swigCPtr);
    Bottle ret = (cPtr == IntPtr.Zero) ? null : new Bottle(cPtr, false);
    return ret;
  }

  public virtual Property asDict() {
    IntPtr cPtr = yarpPINVOKE.Value_asDict(swigCPtr);
    Property ret = (cPtr == IntPtr.Zero) ? null : new Property(cPtr, false);
    return ret;
  }

  public virtual Searchable asSearchable() {
    IntPtr cPtr = yarpPINVOKE.Value_asSearchable(swigCPtr);
    Searchable ret = (cPtr == IntPtr.Zero) ? null : new Searchable(cPtr, false);
    return ret;
  }

  public virtual string asBlob() {
    string ret = yarpPINVOKE.Value_asBlob(swigCPtr);
    return ret;
  }

  public virtual uint asBlobLength() {
    uint ret = yarpPINVOKE.Value_asBlobLength(swigCPtr);
    return ret;
  }

  public new bool read(ConnectionReader connection) {
    bool ret = yarpPINVOKE.Value_read(swigCPtr, ConnectionReader.getCPtr(connection));
    if (yarpPINVOKE.SWIGPendingException.Pending) throw yarpPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public new bool write(ConnectionWriter connection) {
    bool ret = yarpPINVOKE.Value_write(swigCPtr, ConnectionWriter.getCPtr(connection));
    if (yarpPINVOKE.SWIGPendingException.Pending) throw yarpPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public new bool check(string key) {
    bool ret = yarpPINVOKE.Value_check__SWIG_1(swigCPtr, key);
    return ret;
  }

  public new Value find(string key) {
    Value ret = new Value(yarpPINVOKE.Value_find(swigCPtr, key), false);
    return ret;
  }

  public new Bottle findGroup(string key) {
    Bottle ret = new Bottle(yarpPINVOKE.Value_findGroup__SWIG_1(swigCPtr, key), false);
    return ret;
  }

  public virtual bool isEqual(Value alt) {
    bool ret = yarpPINVOKE.Value_isEqual(swigCPtr, Value.getCPtr(alt));
    if (yarpPINVOKE.SWIGPendingException.Pending) throw yarpPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual bool notEqual(Value alt) {
    bool ret = yarpPINVOKE.Value_notEqual(swigCPtr, Value.getCPtr(alt));
    if (yarpPINVOKE.SWIGPendingException.Pending) throw yarpPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void fromString(string str) {
    yarpPINVOKE.Value_fromString(swigCPtr, str);
  }

  public new ConstString toString_c() {
    ConstString ret = new ConstString(yarpPINVOKE.Value_toString_c(swigCPtr), true);
    return ret;
  }

  public virtual Value create() {
    IntPtr cPtr = yarpPINVOKE.Value_create(swigCPtr);
    Value ret = (cPtr == IntPtr.Zero) ? null : new Value(cPtr, false);
    return ret;
  }

  public virtual Value clone() {
    IntPtr cPtr = yarpPINVOKE.Value_clone(swigCPtr);
    Value ret = (cPtr == IntPtr.Zero) ? null : new Value(cPtr, false);
    return ret;
  }

  public virtual int getCode() {
    int ret = yarpPINVOKE.Value_getCode(swigCPtr);
    return ret;
  }

  public virtual bool isNull() {
    bool ret = yarpPINVOKE.Value_isNull(swigCPtr);
    return ret;
  }

  public virtual bool isLeaf() {
    bool ret = yarpPINVOKE.Value_isLeaf(swigCPtr);
    return ret;
  }

  public static Value makeInt(int x) {
    IntPtr cPtr = yarpPINVOKE.Value_makeInt(x);
    Value ret = (cPtr == IntPtr.Zero) ? null : new Value(cPtr, false);
    return ret;
  }

  public static Value makeDouble(double x) {
    IntPtr cPtr = yarpPINVOKE.Value_makeDouble(x);
    Value ret = (cPtr == IntPtr.Zero) ? null : new Value(cPtr, false);
    return ret;
  }

  public static Value makeString(string str) {
    IntPtr cPtr = yarpPINVOKE.Value_makeString(str);
    Value ret = (cPtr == IntPtr.Zero) ? null : new Value(cPtr, false);
    return ret;
  }

  public static Value makeVocab(int v) {
    IntPtr cPtr = yarpPINVOKE.Value_makeVocab__SWIG_0(v);
    Value ret = (cPtr == IntPtr.Zero) ? null : new Value(cPtr, false);
    return ret;
  }

  public static Value makeVocab(string str) {
    IntPtr cPtr = yarpPINVOKE.Value_makeVocab__SWIG_1(str);
    Value ret = (cPtr == IntPtr.Zero) ? null : new Value(cPtr, false);
    return ret;
  }

  public static Value makeBlob(SWIGTYPE_p_void data, int length) {
    IntPtr cPtr = yarpPINVOKE.Value_makeBlob(SWIGTYPE_p_void.getCPtr(data), length);
    Value ret = (cPtr == IntPtr.Zero) ? null : new Value(cPtr, false);
    return ret;
  }

  public static Value makeList() {
    IntPtr cPtr = yarpPINVOKE.Value_makeList__SWIG_0();
    Value ret = (cPtr == IntPtr.Zero) ? null : new Value(cPtr, false);
    return ret;
  }

  public static Value makeList(string txt) {
    IntPtr cPtr = yarpPINVOKE.Value_makeList__SWIG_1(txt);
    Value ret = (cPtr == IntPtr.Zero) ? null : new Value(cPtr, false);
    return ret;
  }

  public static Value makeValue(string txt) {
    IntPtr cPtr = yarpPINVOKE.Value_makeValue(txt);
    Value ret = (cPtr == IntPtr.Zero) ? null : new Value(cPtr, false);
    return ret;
  }

  public static Value getNullValue() {
    Value ret = new Value(yarpPINVOKE.Value_getNullValue(), false);
    return ret;
  }

  public new string toString() {
    string ret = yarpPINVOKE.Value_toString(swigCPtr);
    return ret;
  }

}
