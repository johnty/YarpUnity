/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class Drivers : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal Drivers(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(Drivers obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~Drivers() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          yarpPINVOKE.delete_Drivers(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public static Drivers factory() {
    Drivers ret = new Drivers(yarpPINVOKE.Drivers_factory(), false);
    return ret;
  }

  public DeviceDriver open(string device) {
    IntPtr cPtr = yarpPINVOKE.Drivers_open__SWIG_0(swigCPtr, device);
    DeviceDriver ret = (cPtr == IntPtr.Zero) ? null : new DeviceDriver(cPtr, false);
    return ret;
  }

  public virtual DeviceDriver open(Searchable config) {
    IntPtr cPtr = yarpPINVOKE.Drivers_open__SWIG_1(swigCPtr, Searchable.getCPtr(config));
    DeviceDriver ret = (cPtr == IntPtr.Zero) ? null : new DeviceDriver(cPtr, false);
    if (yarpPINVOKE.SWIGPendingException.Pending) throw yarpPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public new ConstString toString() {
    ConstString ret = new ConstString(yarpPINVOKE.Drivers_toString(swigCPtr), true);
    return ret;
  }

  public void add(DriverCreator creator) {
    yarpPINVOKE.Drivers_add(swigCPtr, DriverCreator.getCPtr(creator));
  }

  public new DriverCreator find(string name) {
    IntPtr cPtr = yarpPINVOKE.Drivers_find(swigCPtr, name);
    DriverCreator ret = (cPtr == IntPtr.Zero) ? null : new DriverCreator(cPtr, false);
    return ret;
  }

  public bool remove(string name) {
    bool ret = yarpPINVOKE.Drivers_remove(swigCPtr, name);
    return ret;
  }

  public static int yarpdev(int argc, SWIGTYPE_p_p_char argv) {
    int ret = yarpPINVOKE.Drivers_yarpdev(argc, SWIGTYPE_p_p_char.getCPtr(argv));
    return ret;
  }

}
