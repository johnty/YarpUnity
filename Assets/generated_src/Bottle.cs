/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class Bottle : Portable {
  private HandleRef swigCPtr;

  internal Bottle(IntPtr cPtr, bool cMemoryOwn) : base(yarpPINVOKE.Bottle_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(Bottle obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~Bottle() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          yarpPINVOKE.delete_Bottle(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public new bool check(string key, string comment) {
    bool ret = yarpPINVOKE.Bottle_check__SWIG_0_0(swigCPtr, key, comment);
    return ret;
  }

  public new Value check(string key, Value fallback, string comment) {
    Value ret = new Value(yarpPINVOKE.Bottle_check__SWIG_0_1(swigCPtr, key, Value.getCPtr(fallback), comment), true);
    if (yarpPINVOKE.SWIGPendingException.Pending) throw yarpPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public new Value check(string key, Value fallback) {
    Value ret = new Value(yarpPINVOKE.Bottle_check__SWIG_0_2(swigCPtr, key, Value.getCPtr(fallback)), true);
    if (yarpPINVOKE.SWIGPendingException.Pending) throw yarpPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public new Bottle findGroup(string key, string comment) {
    Bottle ret = new Bottle(yarpPINVOKE.Bottle_findGroup__SWIG_0_0(swigCPtr, key, comment), false);
    return ret;
  }

  public Bottle() : this(yarpPINVOKE.new_Bottle__SWIG_0(), true) {
  }

  public Bottle(string text) : this(yarpPINVOKE.new_Bottle__SWIG_1(text), true) {
  }

  public Bottle(Bottle bottle) : this(yarpPINVOKE.new_Bottle__SWIG_2(Bottle.getCPtr(bottle)), true) {
    if (yarpPINVOKE.SWIGPendingException.Pending) throw yarpPINVOKE.SWIGPendingException.Retrieve();
  }

  public void clear() {
    yarpPINVOKE.Bottle_clear(swigCPtr);
  }

  public void addInt(int x) {
    yarpPINVOKE.Bottle_addInt(swigCPtr, x);
  }

  public void addVocab(int x) {
    yarpPINVOKE.Bottle_addVocab(swigCPtr, x);
  }

  public void addDouble(double x) {
    yarpPINVOKE.Bottle_addDouble(swigCPtr, x);
  }

  public void addString(string str) {
    yarpPINVOKE.Bottle_addString__SWIG_0(swigCPtr, str);
  }

  public void addString(ConstString str) {
    yarpPINVOKE.Bottle_addString__SWIG_1(swigCPtr, ConstString.getCPtr(str));
    if (yarpPINVOKE.SWIGPendingException.Pending) throw yarpPINVOKE.SWIGPendingException.Retrieve();
  }

  public void add(Value value) {
    yarpPINVOKE.Bottle_add(swigCPtr, Value.getCPtr(value));
    if (yarpPINVOKE.SWIGPendingException.Pending) throw yarpPINVOKE.SWIGPendingException.Retrieve();
  }

  public Bottle addList() {
    Bottle ret = new Bottle(yarpPINVOKE.Bottle_addList(swigCPtr), false);
    return ret;
  }

  public Property addDict() {
    Property ret = new Property(yarpPINVOKE.Bottle_addDict(swigCPtr), false);
    return ret;
  }

  public Value pop() {
    Value ret = new Value(yarpPINVOKE.Bottle_pop(swigCPtr), true);
    return ret;
  }

  public Value get(int index) {
    Value ret = new Value(yarpPINVOKE.Bottle_get(swigCPtr, index), false);
    return ret;
  }

  public int size() {
    int ret = yarpPINVOKE.Bottle_size(swigCPtr);
    return ret;
  }

  public void fromString(string text) {
    yarpPINVOKE.Bottle_fromString(swigCPtr, text);
  }

  public void fromBinary(string buf, int len) {
    yarpPINVOKE.Bottle_fromBinary(swigCPtr, buf, len);
  }

  public string toBinary(SWIGTYPE_p_size_t size) {
    string ret = yarpPINVOKE.Bottle_toBinary__SWIG_0(swigCPtr, SWIGTYPE_p_size_t.getCPtr(size));
    return ret;
  }

  public string toBinary() {
    string ret = yarpPINVOKE.Bottle_toBinary__SWIG_1(swigCPtr);
    return ret;
  }

  public new ConstString toString_c() {
    ConstString ret = new ConstString(yarpPINVOKE.Bottle_toString_c(swigCPtr), true);
    return ret;
  }

  public new bool write(ConnectionWriter writer) {
    bool ret = yarpPINVOKE.Bottle_write__SWIG_0(swigCPtr, ConnectionWriter.getCPtr(writer));
    if (yarpPINVOKE.SWIGPendingException.Pending) throw yarpPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public new bool read(ConnectionReader reader) {
    bool ret = yarpPINVOKE.Bottle_read__SWIG_0(swigCPtr, ConnectionReader.getCPtr(reader));
    if (yarpPINVOKE.SWIGPendingException.Pending) throw yarpPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public new bool write(PortReader reader, bool textMode) {
    bool ret = yarpPINVOKE.Bottle_write__SWIG_1(swigCPtr, PortReader.getCPtr(reader), textMode);
    if (yarpPINVOKE.SWIGPendingException.Pending) throw yarpPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public new bool write(PortReader reader) {
    bool ret = yarpPINVOKE.Bottle_write__SWIG_2(swigCPtr, PortReader.getCPtr(reader));
    if (yarpPINVOKE.SWIGPendingException.Pending) throw yarpPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public new bool read(PortWriter writer, bool textMode) {
    bool ret = yarpPINVOKE.Bottle_read__SWIG_1(swigCPtr, PortWriter.getCPtr(writer), textMode);
    if (yarpPINVOKE.SWIGPendingException.Pending) throw yarpPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public new bool read(PortWriter writer) {
    bool ret = yarpPINVOKE.Bottle_read__SWIG_2(swigCPtr, PortWriter.getCPtr(writer));
    if (yarpPINVOKE.SWIGPendingException.Pending) throw yarpPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual void onCommencement() {
    yarpPINVOKE.Bottle_onCommencement(swigCPtr);
  }

  public new bool check(string key) {
    bool ret = yarpPINVOKE.Bottle_check__SWIG_1(swigCPtr, key);
    return ret;
  }

  public new Value find(string key) {
    Value ret = new Value(yarpPINVOKE.Bottle_find(swigCPtr, key), false);
    return ret;
  }

  public new Bottle findGroup(string key) {
    Bottle ret = new Bottle(yarpPINVOKE.Bottle_findGroup__SWIG_1(swigCPtr, key), false);
    return ret;
  }

  public virtual bool isNull() {
    bool ret = yarpPINVOKE.Bottle_isNull(swigCPtr);
    return ret;
  }

  public void copy(Bottle alt, int first, int len) {
    yarpPINVOKE.Bottle_copy__SWIG_0(swigCPtr, Bottle.getCPtr(alt), first, len);
    if (yarpPINVOKE.SWIGPendingException.Pending) throw yarpPINVOKE.SWIGPendingException.Retrieve();
  }

  public void copy(Bottle alt, int first) {
    yarpPINVOKE.Bottle_copy__SWIG_1(swigCPtr, Bottle.getCPtr(alt), first);
    if (yarpPINVOKE.SWIGPendingException.Pending) throw yarpPINVOKE.SWIGPendingException.Retrieve();
  }

  public void copy(Bottle alt) {
    yarpPINVOKE.Bottle_copy__SWIG_2(swigCPtr, Bottle.getCPtr(alt));
    if (yarpPINVOKE.SWIGPendingException.Pending) throw yarpPINVOKE.SWIGPendingException.Retrieve();
  }

  public static Bottle getNullBottle() {
    Bottle ret = new Bottle(yarpPINVOKE.Bottle_getNullBottle(), false);
    return ret;
  }

  public virtual bool isEqual(Bottle alt) {
    bool ret = yarpPINVOKE.Bottle_isEqual(swigCPtr, Bottle.getCPtr(alt));
    if (yarpPINVOKE.SWIGPendingException.Pending) throw yarpPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual bool notEqual(Bottle alt) {
    bool ret = yarpPINVOKE.Bottle_notEqual(swigCPtr, Bottle.getCPtr(alt));
    if (yarpPINVOKE.SWIGPendingException.Pending) throw yarpPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void append(Bottle alt) {
    yarpPINVOKE.Bottle_append(swigCPtr, Bottle.getCPtr(alt));
    if (yarpPINVOKE.SWIGPendingException.Pending) throw yarpPINVOKE.SWIGPendingException.Retrieve();
  }

  public Bottle tail() {
    Bottle ret = new Bottle(yarpPINVOKE.Bottle_tail(swigCPtr), true);
    return ret;
  }

  public void specialize(int subCode) {
    yarpPINVOKE.Bottle_specialize(swigCPtr, subCode);
  }

  public int getSpecialization() {
    int ret = yarpPINVOKE.Bottle_getSpecialization(swigCPtr);
    return ret;
  }

  public void setNested(bool nested) {
    yarpPINVOKE.Bottle_setNested(swigCPtr, nested);
  }

  public void hasChanged() {
    yarpPINVOKE.Bottle_hasChanged(swigCPtr);
  }

  public new string toString() {
    string ret = yarpPINVOKE.Bottle_toString(swigCPtr);
    return ret;
  }

}
